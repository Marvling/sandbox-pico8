pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
-- WITH ALTERNATIVE DEFLECTION

function change_obj_col (speed)
	obj_col %= 15
	obj_col += speed
end

function change_size (speed, strength)
	frame = frame + 1

	if (frame > 32765) then
		frame = 0
	end

	obj_r = 3 + (sin(frame/speed))*strength

end

function check_obj_collision(bx, by, br, x, y, w, h)

	if bx + br < x then return false end
	if bx - br > x + w then return false end
	if by + br < y then return false end
	if by - br > y + h then return false end

	return true
end

function check_obj_location(x, y, w, h)
    local slp = obj_dy / obj_dx
    local cx, cy

    if obj_dx == 0 then
        return false

    elseif obj_dy == 0 then
        return true
	-- top right
    elseif slp > 0 and obj_dx > 0 then
        cx = x - obj_x
        cy = y - obj_y
        return cx > 0 and cy/cx < slp

    elseif slp < 0 and obj_dx > 0 then
        cx = x - obj_x
        cy = y + h - obj_y
        return cx > 0 and cy/cx >= slp
		
    elseif slp > 0 and obj_dx < 0 then
        cx = x + w - obj_x
        cy = y + h - obj_y
        return cx < 0 and cy/cx <= slp
    else
        cx = x + w - obj_x
        cy = y - obj_y
        return cx < 0 and cy/cx >= slp
    end
end



function _init ()
	cls()
	frame = 0
	
	obj_x = 78
	obj_dx = 1.6
	obj_y = 12
	obj_dy = 3.2
	obj_r = 2

	obj_isMid = false
	obj_col = 7
	
	pad_x = 51
	pad_y = 90
	pad_w = 24
	pad_h = 30
	pad_col = 1
	
	pad_v = 0
	pad_a = 0.25

end

function _update()
	local is_button_pressed = false
	local next_x, next_y

	pad_col = 1

	-- Pad Movement
	if btn(0) then
		-- left
		pad_v -= pad_a
		is_button_pressed = true
	end
	if btn(1) then
		--right
		pad_v += pad_a
		is_button_pressed = true
	end

	if not(is_button_pressed) then
		pad_v = pad_v / 1.2
	end

	pad_x += pad_v

	if pad_x + pad_w > 127 then
		pad_x = 127 - pad_w
	elseif pad_x < 0 then
		pad_x = 0
	end

	next_x = obj_x + obj_dx
	next_y = obj_y + obj_dy
	
	-- Window Collisons
	if (next_x > 128 - obj_r) or (next_x < obj_r) then
		mid(0, obj_x, 127)
		obj_dx = -obj_dx
		sfx(0)
	end

	if (next_y > 128 - obj_r) or (next_y < obj_r) then
		mid(0, obj_y, 127)
		obj_dy = -obj_dy
		sfx(0)
	end


	-- Pad Collisons

	if  check_obj_collision(next_x, next_y, obj_r, pad_x, pad_y, pad_w, pad_h) then

		if check_obj_location(pad_x, pad_y, pad_w, pad_h) then
			obj_dx = - obj_dx
		else
			obj_dy = - obj_dy
		end	
		pad_col = 9
		sfx(3)
	end

	-- Movmenet 
	obj_x = next_x
	obj_y = next_y
    
end

function _draw()
	cls()
	
	rectfill(0,0,128,128,5)
	circfill(obj_x,obj_y,obj_r,obj_col)
	rectfill(pad_x, pad_y, pad_x + pad_w, pad_y + pad_h, pad_col)
	print('dx'..obj_dx)
	print('dy'..obj_dy)
	print(obj_isMid)

	
	
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000b6666666666666666666b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000b666666666666666666666b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000b6bbbbbbaaaaaaabbbbbb6b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000b666666666666666666666b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000b6666666666666666666b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000001010101010101010000000000000000010101010101010100000000000000000101010101010101000000000000000001010101010101010000000000000000010101010101010100000000000000000101010101010101000000000000
0000010101010101010100000000000000000101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000008770107701676016760177501774017730177201771013710117100d7000f100101000010000100011000f10001100001000010000100001000c1000c1000c1000b1000b1000a1000a1000a1000a100
0001000005850108501885021850278502d8503185033850388503a8503c8503e8503f8503f8503e8503d8503b85039850378503385031850308502c850298502685024850208501b85016850118500885003850
00100000059700f970189601c96022950269402c9302f9202c91028910171002120013100182001620010200091000c2000920003100042000090001200000000000000000000000000000000000000000000000
000100000f120141401d1601d1601c160181501113004120081300e15012150131300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
